# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  reservations: [Reservation!]
}

type Reservation {
  id: String!
  roomId: ID!
  userId: ID!
  room: Room!
  user: User!
  startDate: DateTime!
  endDate: DateTime!
  status: ReservationStatus!
  guests: Int!
  totalNights: Int!
  totalDays: Int!
  totalWeekendPairs: Int!
  basePrice: Int!
  totalPrice: Int!
  discount: Int!
  weekendSurcharge: Int!
  extraServicesFee: Int!
  hasDiscount: Boolean!
  hasExtraServices: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum ReservationStatus {
  PAST
  ONGOING
  FUTURE
}

type Room {
  id: ID!
  roomName: String!
  roomDesc: String
  roomType: RoomType!
  roomCapacity: Int!
  roomPrice: Float!
  outsideView: Boolean!
  status: RoomStatus!
  reservations: [Reservation!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum RoomType {
  SINGLE
  DOUBLE
  SUITE
}

enum RoomStatus {
  AVAILABLE
  UNAVAILABLE
}

type Query {
  """Get all rooms"""
  rooms(startDate: DateTime!, endDate: DateTime!, roomCapacity: Int!, roomType: RoomType, outsideView: Boolean): [Room!]!

  """Get a room by id"""
  room(id: ID!): Room!

  """Get all reservations"""
  reservations: [Reservation!]!

  """Get a reservation by id"""
  reservation(id: ID!): Reservation!

  """Get the total price of a reservation"""
  getReservationPrice(getReservationPriceInput: CreateReservationInput!): Reservation!
}

input CreateReservationInput {
  roomId: ID!
  userId: ID!
  guests: Int!
  hasExtraServices: Boolean!
  startDate: DateTime!
  endDate: DateTime!
}

type Mutation {
  """Create a new room"""
  createRoom(createRoomInput: CreateRoomInput!): Room!

  """Update a room"""
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!

  """Make room unavailable"""
  removeRoom(id: ID!): Room!

  """
  Create a new reservation for a room based on the roomId,userId, gests, and dates
  """
  createReservation(createReservationInput: CreateReservationInput!): Reservation!

  """Update a reservation by id"""
  updateReservation(updateReservationInput: UpdateReservationInput!): Reservation!
  cancelReservation(id: String!): String!

  """Create a new user"""
  createUser(createUserInput: CreateUserInput!): User!

  """
  Execute the seed process, populating the database with initial user and rooms data
  """
  executeSeed: Boolean!
}

input CreateRoomInput {
  roomName: String!
  roomDesc: String
  roomType: RoomType!
  roomCapacity: Int!
  outsideView: Boolean!
  roomPrice: Int!
  status: RoomStatus! = AVAILABLE
}

input UpdateRoomInput {
  roomName: String
  roomDesc: String
  roomType: RoomType
  roomCapacity: Int
  outsideView: Boolean
  roomPrice: Int
  status: RoomStatus = AVAILABLE
  id: ID!
}

input UpdateReservationInput {
  roomId: ID
  userId: ID
  guests: Int
  hasExtraServices: Boolean
  startDate: DateTime
  endDate: DateTime
  id: Int!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}